(node:792) Warning: An error event has already been emitted on the socket. Please use the destroy method on the socket while handling a 'clientError' event.
(Use `node --trace-warnings ...` to show where the warning was created)
(node:4387) Warning: An error event has already been emitted on the socket. Please use the destroy method on the socket while handling a 'clientError' event.
(Use `node --trace-warnings ...` to show where the warning was created)
(node:16867) Warning: An error event has already been emitted on the socket. Please use the destroy method on the socket while handling a 'clientError' event.
(Use `node --trace-warnings ...` to show where the warning was created)
(node:19800) Warning: An error event has already been emitted on the socket. Please use the destroy method on the socket while handling a 'clientError' event.
(Use `node --trace-warnings ...` to show where the warning was created)
(node:790) Warning: An error event has already been emitted on the socket. Please use the destroy method on the socket while handling a 'clientError' event.
(Use `node --trace-warnings ...` to show where the warning was created)
(node:790) Warning: An error event has already been emitted on the socket. Please use the destroy method on the socket while handling a 'clientError' event.
(Use `node --trace-warnings ...` to show where the warning was created)
node:internal/process/esm_loader:97
    internalBinding('errors').triggerUncaughtException(
                              ^

HoundError: connect ETIMEDOUT
    at PoolConnection._handleTimeoutError (/home/ubuntu/parent_dir/Hound-Server/Node/node_modules/mysql2/lib/connection.js:189:17)
    at listOnTimeout (node:internal/timers:569:17)
    at process.processTimers (node:internal/timers:512:7) {
  sourceFunctions: [ 'createDatabasePool', 'Error' ],
  houndDeclarationCode: undefined,
  cause: undefined
}

Node.js v18.17.1
node:internal/process/esm_loader:97
    internalBinding('errors').triggerUncaughtException(
                              ^

HoundError: connect ETIMEDOUT
    at PoolConnection._handleTimeoutError (/home/ubuntu/parent_dir/Hound-Server/Node/node_modules/mysql2/lib/connection.js:189:17)
    at listOnTimeout (node:internal/timers:569:17)
    at process.processTimers (node:internal/timers:512:7) {
  sourceFunctions: [ 'createDatabasePool', 'Error' ],
  houndDeclarationCode: undefined,
  cause: undefined
}

Node.js v18.17.1
node:internal/process/esm_loader:97
    internalBinding('errors').triggerUncaughtException(
                              ^

HoundError: connect ETIMEDOUT
    at PoolConnection._handleTimeoutError (/home/ubuntu/parent_dir/Hound-Server/Node/node_modules/mysql2/lib/connection.js:189:17)
    at listOnTimeout (node:internal/timers:569:17)
    at process.processTimers (node:internal/timers:512:7) {
  sourceFunctions: [ 'createDatabasePool', 'Error' ],
  houndDeclarationCode: undefined,
  cause: undefined
}

Node.js v18.17.1
node:internal/process/esm_loader:97
    internalBinding('errors').triggerUncaughtException(
                              ^

HoundError: connect ETIMEDOUT
    at PoolConnection._handleTimeoutError (/home/ubuntu/parent_dir/Hound-Server/Node/node_modules/mysql2/lib/connection.js:189:17)
    at listOnTimeout (node:internal/timers:569:17)
    at process.processTimers (node:internal/timers:512:7) {
  sourceFunctions: [ 'createDatabasePool', 'Error' ],
  houndDeclarationCode: undefined,
  cause: undefined
}

Node.js v18.17.1
node:internal/process/esm_loader:97
    internalBinding('errors').triggerUncaughtException(
                              ^

HoundError: connect ETIMEDOUT
    at PoolConnection._handleTimeoutError (/home/ubuntu/parent_dir/Hound-Server/Node/node_modules/mysql2/lib/connection.js:189:17)
    at listOnTimeout (node:internal/timers:569:17)
    at process.processTimers (node:internal/timers:512:7) {
  sourceFunctions: [ 'createDatabasePool', 'Error' ],
  houndDeclarationCode: undefined,
  cause: undefined
}

Node.js v18.17.1
(node:8468) Warning: An error event has already been emitted on the socket. Please use the destroy method on the socket while handling a 'clientError' event.
(Use `node --trace-warnings ...` to show where the warning was created)
(node:790) Warning: An error event has already been emitted on the socket. Please use the destroy method on the socket while handling a 'clientError' event.
(Use `node --trace-warnings ...` to show where the warning was created)